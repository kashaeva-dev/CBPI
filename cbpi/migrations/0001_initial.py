# Generated by Django 5.2.4 on 2025-07-27 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тип действия')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип действия',
                'verbose_name_plural': 'Типы действий',
            },
        ),
        migrations.CreateModel(
            name='CompositionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название типа')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип произведения',
                'verbose_name_plural': 'Типы произведений',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='DecisionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тип решения')),
                ('example', models.TextField(blank=True, verbose_name='Пример')),
            ],
            options={
                'verbose_name': 'Тип решения',
                'verbose_name_plural': 'Типы решений',
            },
        ),
        migrations.CreateModel(
            name='FactType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тип факта')),
                ('is_numerical', models.BooleanField(verbose_name='Числовой факт')),
                ('measure', models.CharField(blank=True, max_length=100, verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Тип факта',
                'verbose_name_plural': 'Типы фактов',
            },
        ),
        migrations.CreateModel(
            name='GlobalActorList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=255, verbose_name='Ник')),
                ('date_of_registration', models.DateField(verbose_name='Дата регистрации')),
            ],
            options={
                'verbose_name': 'Глобальный актор',
                'verbose_name_plural': 'Глобальные акторы',
            },
        ),
        migrations.CreateModel(
            name='RoleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название роли')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип роли',
                'verbose_name_plural': 'Типы ролей',
            },
        ),
        migrations.CreateModel(
            name='StampStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Статус')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Статус отметки',
                'verbose_name_plural': 'Статусы отметок',
            },
        ),
        migrations.CreateModel(
            name='Universe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название вселенной')),
            ],
            options={
                'verbose_name': 'Вселенная',
                'verbose_name_plural': 'Вселенные',
            },
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('date_published', models.DateField(blank=True, null=True, verbose_name='Дата публикации')),
                ('file_source', models.FileField(blank=True, null=True, upload_to='compositions/', verbose_name='Файл')),
                ('composition_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.compositiontype', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Произведение',
                'verbose_name_plural': 'Произведения',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название события')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('zero_event_flag', models.BooleanField(default=False, verbose_name='Нулевое событие?')),
                ('date_time_from_zero_event', models.CharField(blank=True, max_length=255, null=True, verbose_name='Дата относительно нуля')),
                ('cm_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Позиция в произведении')),
                ('composition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.composition', verbose_name='Произведение')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название эпизода')),
                ('story_resume', models.TextField(verbose_name='Краткое описание')),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.composition', verbose_name='Произведение')),
                ('previous_episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.episode', verbose_name='Предыдущий эпизод')),
                ('start_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='Начальное событие')),
            ],
            options={
                'verbose_name': 'Эпизод',
                'verbose_name_plural': 'Эпизоды',
            },
        ),
        migrations.CreateModel(
            name='Fact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('numeric_value', models.FloatField(blank=True, null=True, verbose_name='Числовое значение')),
                ('condition_for_effect', models.TextField(blank=True, verbose_name='Условие действия')),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.composition', verbose_name='Произведение')),
                ('result_of_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='Результат события')),
                ('fact_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.facttype', verbose_name='Тип факта')),
            ],
            options={
                'verbose_name': 'Факт',
                'verbose_name_plural': 'Факты',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя автора')),
                ('photo_file', models.ImageField(blank=True, null=True, upload_to='authors/', verbose_name='Фото')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('wiki_link', models.URLField(blank=True, null=True, verbose_name='Wiki ссылка')),
                ('country_of_birth', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.country', verbose_name='Страна рождения')),
                ('gla', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.globalactorlist', verbose_name='Глобальный актор')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
            },
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя героя')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('photo_file', models.ImageField(blank=True, null=True, upload_to='heroes/', verbose_name='Фото')),
                ('birth_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='Событие рождения')),
                ('gla', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.globalactorlist', verbose_name='Глобальный актор')),
            ],
            options={
                'verbose_name': 'Герой',
                'verbose_name_plural': 'Герои',
            },
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.decisiontype', verbose_name='Тип')),
                ('event_after', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='После события')),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.hero', verbose_name='Герой')),
            ],
            options={
                'verbose_name': 'Решение',
                'verbose_name_plural': 'Решения',
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.episode', verbose_name='Эпизод')),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.hero', verbose_name='Герой')),
                ('role_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.roletype', verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Участие героя',
                'verbose_name_plural': 'Участия героев',
            },
        ),
        migrations.CreateModel(
            name='HeroAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.actiontype', verbose_name='Тип действия')),
                ('based_on_decision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.decision', verbose_name='Основано на решении')),
                ('cause_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='Причинное событие')),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.hero', verbose_name='Герой')),
                ('in_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.participation', verbose_name='Роль в эпизоде')),
            ],
            options={
                'verbose_name': 'Действие героя',
                'verbose_name_plural': 'Действия героев',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название места')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('wiki_link', models.URLField(blank=True, verbose_name='Wiki ссылка')),
                ('real_flag', models.BooleanField(default=False, verbose_name='Реальное место?')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.place', verbose_name='Родительское место')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.place', verbose_name='Место'),
        ),
        migrations.CreateModel(
            name='Saga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название саги')),
                ('zero_event_abbreviature', models.CharField(blank=True, max_length=50, null=True, verbose_name='Аббревиатура нулевого события')),
                ('date_first_published', models.DateField(blank=True, null=True, verbose_name='Дата первой публикации')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.author', verbose_name='Автор')),
                ('country_first_published', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sagas', to='cbpi.country', verbose_name='Страна первой публикации')),
                ('universe_of_events', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.universe', verbose_name='Вселенная событий')),
            ],
            options={
                'verbose_name': 'Сага',
                'verbose_name_plural': 'Саги',
            },
        ),
        migrations.AddField(
            model_name='hero',
            name='saga',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.saga', verbose_name='Сага'),
        ),
        migrations.AddField(
            model_name='composition',
            name='saga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.saga', verbose_name='Сага'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('native_language', models.CharField(max_length=100, verbose_name='Родной язык')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.country', verbose_name='Страна')),
                ('gla', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.globalactorlist', verbose_name='Глобальный актор')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользователь (доп.)',
                'verbose_name_plural': 'Пользователи (доп.)',
            },
        ),
        migrations.AddField(
            model_name='globalactorlist',
            name='registered_by_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.user', verbose_name='Зарегистрирован пользователем'),
        ),
        migrations.CreateModel(
            name='UserStamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Дата и время')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.stampstatus', verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отметка пользователя',
                'verbose_name_plural': 'Отметки пользователей',
            },
        ),
        migrations.AddField(
            model_name='saga',
            name='user_stamp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка пользователя'),
        ),
        migrations.AddField(
            model_name='hero',
            name='user_stamp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка'),
        ),
        migrations.AddField(
            model_name='event',
            name='user_stamp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка'),
        ),
        migrations.AddField(
            model_name='episode',
            name='user_stamp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка'),
        ),
        migrations.AddField(
            model_name='decisiontype',
            name='user_stamp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка'),
        ),
        migrations.AddField(
            model_name='actiontype',
            name='user_stamp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка'),
        ),
        migrations.CreateModel(
            name='ValueDimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название ценности')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('utopiya_picture', models.TextField(blank=True, verbose_name='Утопия (описание)')),
                ('user_stamp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.userstamp', verbose_name='Отметка')),
            ],
            options={
                'verbose_name': 'Ценность',
                'verbose_name_plural': 'Ценности',
            },
        ),
        migrations.CreateModel(
            name='HeroValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='Вес')),
                ('event_after', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='После события')),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.hero', verbose_name='Герой')),
                ('value_dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.valuedimension', verbose_name='Ценность')),
            ],
            options={
                'verbose_name': 'Убеждение героя',
                'verbose_name_plural': 'Убеждения героев',
            },
        ),
        migrations.CreateModel(
            name='DecisionEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='Влияние от -1 до 1')),
                ('event_after', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='После события')),
                ('gla_evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.globalactorlist', verbose_name='Оценивающий актор')),
                ('hero_was_evaluated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='оцененный_герой', to='cbpi.hero', verbose_name='Оцениваемый герой')),
                ('eval_for_ha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.heroaction', verbose_name='Оцениваемое действие')),
                ('affects_on_vd', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.valuedimension', verbose_name='Затрагиваемая ценность')),
            ],
            options={
                'verbose_name': 'Оценка действия',
                'verbose_name_plural': 'Оценки действий',
            },
        ),
        migrations.CreateModel(
            name='EventSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('straight', models.BooleanField(default=False, verbose_name='Сразу после?')),
                ('event_after', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='событие_после', to='cbpi.event', verbose_name='Следующее событие')),
                ('event_before', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='событие_до', to='cbpi.event', verbose_name='Предыдущее событие')),
            ],
            options={
                'verbose_name': 'Последовательность событий',
                'verbose_name_plural': 'Последовательности событий',
                'unique_together': {('event_before', 'event_after')},
            },
        ),
        migrations.CreateModel(
            name='FactRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(blank=True, max_length=100, verbose_name='ID группы')),
                ('based_fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='основанный_факт', to='cbpi.fact', verbose_name='Базовый факт')),
                ('event_relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbpi.event', verbose_name='Связанное событие')),
                ('followed_fact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='следующий_факт', to='cbpi.fact', verbose_name='Следующий факт')),
            ],
            options={
                'verbose_name': 'Связь фактов',
                'verbose_name_plural': 'Связи фактов',
                'unique_together': {('based_fact', 'followed_fact')},
            },
        ),
        migrations.CreateModel(
            name='AffectOnValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(verbose_name='Вес воздействия')),
                ('fact_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.facttype', verbose_name='Тип факта')),
                ('value_dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbpi.valuedimension', verbose_name='Ценность')),
            ],
            options={
                'verbose_name': 'Влияние на ценность',
                'verbose_name_plural': 'Влияния на ценности',
                'unique_together': {('value_dimension', 'fact_type')},
            },
        ),
    ]
